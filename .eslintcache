[{"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\index.js":"1","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\App.js":"2","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\reportWebVitals.js":"3","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\LCS.js":"4","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\IO.js":"5","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\functions\\TestCase123.js":"6","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\SCS.js":"7","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\ED.js":"8","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\LIS.js":"9","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\functions\\TestCase4579.js":"10","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\MCM.js":"11","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\KP.js":"12","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\functions\\TestCase68.js":"13","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\RC.js":"14","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\PP.js":"15","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\CCP.js":"16"},{"size":1559,"mtime":1610931974567,"results":"17","hashOfConfig":"18"},{"size":1896,"mtime":1610888192406,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":3012,"mtime":1610908441120,"results":"21","hashOfConfig":"18"},{"size":766,"mtime":1610894856755,"results":"22","hashOfConfig":"18"},{"size":310,"mtime":1610903266918,"results":"23","hashOfConfig":"18"},{"size":2536,"mtime":1610908755588,"results":"24","hashOfConfig":"18"},{"size":3127,"mtime":1610910539341,"results":"25","hashOfConfig":"18"},{"size":2559,"mtime":1610918511365,"results":"26","hashOfConfig":"18"},{"size":347,"mtime":1610916257716,"results":"27","hashOfConfig":"18"},{"size":2991,"mtime":1610918818708,"results":"28","hashOfConfig":"18"},{"size":5429,"mtime":1610928492857,"results":"29","hashOfConfig":"18"},{"size":546,"mtime":1610920079932,"results":"30","hashOfConfig":"18"},{"size":2537,"mtime":1610930461901,"results":"31","hashOfConfig":"18"},{"size":3520,"mtime":1610931644745,"results":"32","hashOfConfig":"18"},{"size":3032,"mtime":1610932211608,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wv4pza",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\index.js",[],"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\App.js",["70","71"],"import \"./App.css\";\nimport { Button, Row, Col } from \"antd\";\nimport LCS from \"./Pages/LCS\";\nimport { Link, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Dynamic Programming Algorithms</h1>\n      <h3>Group Members</h3>\n      <ol>\n        <li>Mugheera Bin Sadiq ( 18K - 0296 )</li>\n        <li>Yusha Arif ( 18K - 1289 )</li>\n      </ol>\n      <div className=\"Main\">\n        <Row>\n          <Col>\n            <Button type=\"primary\" danger>\n              <Link to=\"/LCS\">Longest Common Subsequence</Link>\n            </Button>\n          </Col>\n          <Col>\n            <Button type=\"primary\" danger>\n              <Link to=\"/SCS\">Shortest Common Supersequence</Link>\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Button type=\"primary\" danger>\n            <Link to=\"/LIS\">Longest Increasing Subsequence</Link>\n          </Button>\n          <Button type=\"primary\" danger>\n            <Link to=\"/ED\">The Levenshtein distance (Edit distance)</Link>\n          </Button>\n        </Row>\n        <Row>\n          <Button type=\"primary\" danger>\n            <Link to=\"/MCM\">Matrix Chain Multiplication</Link>\n          </Button>\n          <Button type=\"primary\" danger>\n            <Link to=\"/kP\">0â€“1 Knapsack problem</Link>\n          </Button>\n        </Row>\n        <Row>\n          <Button type=\"primary\" danger>\n            <Link to=\"/PP\">Partition problem</Link>\n          </Button>\n          <Button type=\"primary\" danger>\n            <Link to=\"/RC\">Rod Cutting</Link>\n          </Button>\n        </Row>\n        <Row>\n          <Button type=\"primary\" danger>\n            <Link to=\"/CCP\">Coin change problem</Link>\n          </Button>\n          <Button type=\"primary\" danger>\n            <Link to=\"/WBP\">Word Break Problem</Link>\n          </Button>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",["72","73"],"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\reportWebVitals.js",[],"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\LCS.js",["74"],"import React, { useState, useEffect } from \"react\";\r\nimport GenerateTestCase from \"../functions/TestCase123\";\r\nimport { Table } from \"antd\";\r\n\r\nfunction getLcsLengths(str1, str2) {\r\n  var result = [];\r\n  for (var i = -1; i < str1.length; i = i + 1) {\r\n    result[i] = [];\r\n    for (var j = -1; j < str2.length; j = j + 1) {\r\n      if (i === -1 || j === -1) {\r\n        result[i][j] = 0;\r\n      } else if (str1[i] === str2[j]) {\r\n        result[i][j] = result[i - 1][j - 1] + 1;\r\n      } else {\r\n        result[i][j] = Math.max(result[i - 1][j], result[i][j - 1]);\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getLcs(str1, str2, lcsLengthsMatrix) {\r\n  var execute = function (i, j) {\r\n    if (!lcsLengthsMatrix[i][j]) {\r\n      return \"\";\r\n    } else if (str1[i] === str2[j]) {\r\n      return execute(i - 1, j - 1) + str1[i];\r\n    } else if (lcsLengthsMatrix[i][j - 1] > lcsLengthsMatrix[i - 1][j]) {\r\n      return execute(i, j - 1);\r\n    } else {\r\n      return execute(i - 1, j);\r\n    }\r\n  };\r\n  return execute(str1.length - 1, str2.length - 1);\r\n}\r\n\r\nconst LCS = () => {\r\n  const columns = [\r\n    {\r\n      title: \"String 1\",\r\n      dataIndex: \"String1\",\r\n      width: 150,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"String 2\",\r\n      dataIndex: \"String2\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Output for TestCase\",\r\n      dataIndex: \"Output\",\r\n      fixed: \"right\",\r\n      width: 50,\r\n    },\r\n  ];\r\n\r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const updateSource = [...dataSource];\r\n    for (let i = 0; i < 10; i++) {\r\n      let String1 = GenerateTestCase();\r\n      let String2 = GenerateTestCase();\r\n      updateSource.push({\r\n        String1: String1,\r\n        String2: String2,\r\n        Output: \"\",\r\n      });\r\n    }\r\n\r\n    setDataSource(updateSource);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>Longest Common Subsequence</h1>\r\n      <p>\r\n        Note: Please select the row to generate the output for a particular test\r\n        case. The below test cases are randomly generated by using a function.\r\n      </p>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={dataSource}\r\n        onRow={(record) => ({\r\n          onClick: () => {\r\n            let newOutput;\r\n\r\n            var lcsLengthsMatrix = getLcsLengths(\r\n              record.String1,\r\n              record.String2\r\n            );\r\n\r\n            newOutput = getLcs(record.String1, record.String2, lcsLengthsMatrix)\r\n              .length;\r\n\r\n            let updatedSource = [...dataSource];\r\n\r\n            updatedSource = updatedSource.map((item) => {\r\n              if (item.String1 === record.String1) {\r\n                return {\r\n                  ...record,\r\n                  Output: newOutput,\r\n                };\r\n              } else {\r\n                return item;\r\n              }\r\n            });\r\n            setDataSource(updatedSource);\r\n          },\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LCS;\r\n","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\IO.js",["75","76"],"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\functions\\TestCase123.js",[],"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\SCS.js",["77"],"import React, { useState, useEffect } from \"react\";\r\nimport GenerateTestCase from \"../functions/TestCase123\";\r\nimport { Table } from \"antd\";\r\n\r\nfunction superSeq(X, Y, m, n) {\r\n  var dp = new Array(m + 1);\r\n\r\n  for (let c = 0; c < dp.length; c++) {\r\n    dp[c] = new Array(n + 1);\r\n  }\r\n\r\n  // Fill table in bottom up manner\r\n  for (let i = 0; i <= m; i++) {\r\n    for (let j = 0; j <= n; j++) {\r\n      // Below steps follow above recurrence\r\n      if (!i) dp[i][j] = j;\r\n      else if (!j) dp[i][j] = i;\r\n      else if (X[i - 1] === Y[j - 1]) dp[i][j] = 1 + dp[i - 1][j - 1];\r\n      else dp[i][j] = 1 + Math.min(dp[i - 1][j], dp[i][j - 1]);\r\n    }\r\n  }\r\n\r\n  return dp[m][n];\r\n}\r\n\r\nconst SCS = () => {\r\n  const columns = [\r\n    {\r\n      title: \"String 1\",\r\n      dataIndex: \"String1\",\r\n      width: 150,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"String 2\",\r\n      dataIndex: \"String2\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Output for TestCase\",\r\n      dataIndex: \"Output\",\r\n      fixed: \"right\",\r\n      width: 50,\r\n    },\r\n  ];\r\n\r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const updateSource = [...dataSource];\r\n    for (let i = 0; i < 10; i++) {\r\n      let String1 = GenerateTestCase();\r\n      let String2 = GenerateTestCase();\r\n      updateSource.push({\r\n        String1: String1,\r\n        String2: String2,\r\n        Output: \"\",\r\n      });\r\n    }\r\n\r\n    setDataSource(updateSource);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>Shortest Common Supersequence</h1>\r\n      <p>\r\n        Note: Please select the row to generate the output for a particular test\r\n        case. The below test cases are randomly generated by using a function.\r\n      </p>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={dataSource}\r\n        onRow={(record) => ({\r\n          onClick: () => {\r\n            let newOutput;\r\n\r\n            var X = record.String1;\r\n            var Y = record.String2;\r\n            newOutput = superSeq(X, Y, X.length, Y.length);\r\n\r\n            let updatedSource = [...dataSource];\r\n\r\n            updatedSource = updatedSource.map((item) => {\r\n              if (item.String1 === record.String1) {\r\n                return {\r\n                  ...record,\r\n                  Output: newOutput,\r\n                };\r\n              } else {\r\n                return item;\r\n              }\r\n            });\r\n            setDataSource(updatedSource);\r\n          },\r\n        })}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SCS;\r\n","D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\ED.js",["78","79","80","81","82"],"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\LIS.js",["83"],"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\functions\\TestCase4579.js",[],"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\MCM.js",["84"],"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\KP.js",["85"],"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\functions\\TestCase68.js",[],"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\RC.js",["86"],"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\PP.js",["87","88"],"D:\\Mugheera\\University\\Algo\\Project\\algoproject\\src\\Pages\\CCP.js",["89","90"],{"ruleId":"91","severity":1,"message":"92","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":11},{"ruleId":"91","severity":1,"message":"95","line":4,"column":16,"nodeType":"93","messageId":"94","endLine":4,"endColumn":21},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":73,"column":6,"nodeType":"102","endLine":73,"endColumn":8,"suggestions":"103"},{"ruleId":"91","severity":1,"message":"104","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":13},{"ruleId":"91","severity":1,"message":"105","line":2,"column":15,"nodeType":"93","messageId":"94","endLine":2,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":62,"column":6,"nodeType":"102","endLine":62,"endColumn":8,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":13,"column":22,"nodeType":"109","messageId":"110","endLine":13,"endColumn":33},{"ruleId":"107","severity":1,"message":"108","line":14,"column":21,"nodeType":"109","messageId":"110","endLine":14,"endColumn":32},{"ruleId":"107","severity":1,"message":"108","line":32,"column":23,"nodeType":"109","messageId":"110","endLine":32,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":35,"column":36,"nodeType":"113","messageId":"114","endLine":35,"endColumn":38},{"ruleId":"100","severity":1,"message":"101","line":83,"column":6,"nodeType":"102","endLine":83,"endColumn":8,"suggestions":"115"},{"ruleId":"100","severity":1,"message":"116","line":60,"column":6,"nodeType":"102","endLine":60,"endColumn":8,"suggestions":"117"},{"ruleId":"100","severity":1,"message":"116","line":73,"column":6,"nodeType":"102","endLine":73,"endColumn":8,"suggestions":"118"},{"ruleId":"100","severity":1,"message":"116","line":115,"column":6,"nodeType":"102","endLine":115,"endColumn":8,"suggestions":"119"},{"ruleId":"100","severity":1,"message":"116","line":65,"column":6,"nodeType":"102","endLine":65,"endColumn":8,"suggestions":"120"},{"ruleId":"100","severity":1,"message":"116","line":82,"column":6,"nodeType":"102","endLine":82,"endColumn":8,"suggestions":"121"},{"ruleId":"111","severity":1,"message":"112","line":104,"column":17,"nodeType":"113","messageId":"114","endLine":104,"endColumn":19},{"ruleId":"111","severity":1,"message":"122","line":27,"column":15,"nodeType":"113","messageId":"114","endLine":27,"endColumn":17},{"ruleId":"100","severity":1,"message":"116","line":71,"column":6,"nodeType":"102","endLine":71,"endColumn":8,"suggestions":"123"},"no-unused-vars","'LCS' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dataSource'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'Row' is defined but never used.","'Col' is defined but never used.",["127"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["128"],"React Hook useEffect has missing dependencies: 'dataSource' and 'globalTestCase'. Either include them or remove the dependency array.",["129"],["130"],["131"],["132"],["133"],"Expected '!==' and instead saw '!='.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"135","fix":"137"},{"desc":"135","fix":"138"},{"desc":"139","fix":"140"},{"desc":"139","fix":"141"},{"desc":"139","fix":"142"},{"desc":"139","fix":"143"},{"desc":"139","fix":"144"},{"desc":"139","fix":"145"},"Update the dependencies array to be: [dataSource]",{"range":"146","text":"147"},{"range":"148","text":"147"},{"range":"149","text":"147"},"Update the dependencies array to be: [dataSource, globalTestCase]",{"range":"150","text":"151"},{"range":"152","text":"151"},{"range":"153","text":"151"},{"range":"154","text":"151"},{"range":"155","text":"151"},{"range":"156","text":"151"},[1828,1830],"[dataSource]",[1450,1452],[2061,2063],[1461,1463],"[dataSource, globalTestCase]",[1878,1880],[3654,3656],[1492,1494],[2294,2296],[1920,1922]]